temp <- a.score(dapc2chamberAECCCA)
temp
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 11, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:6))
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 13, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:6))
assignplot(dapc2chamberAECCCA)
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
#Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
xval[2:6]
temp <- a.score(dapc2chamberAECCCA)
temp
```{r }
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
temp <- a.score(dapc2chamberAECCCA)
temp
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 14, n.da = 1)
dapc2chamberAECCCA
dapc2chamberAECCCA
```{r }
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:6))
assignplot(dapc2chamberAECCCA)
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
xval[2:6]
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 15, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:6))
assignplot(dapc2chamberAECCCA)
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
xval[2:6]
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
scatter(dapc1chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
temporiginal_1 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 15, n.da = 1))$assign.per.pop*100
temporiginal_1 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 15, n.da = 1))$assign.per.pop*100
temporiginal_2 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 10, n.da = 1))$assign.per.pop*100
barplot(temporiginal_1, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temporiginal_2, xlab = "% of reassigment", horiz = TRUE, las=1)
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 100, n.pca = 300))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 100, n.pca = 300))$assign.per.pop*100
temp
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
barplot(temporiginal_1, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temporiginal_2, xlab = "% of reassigment", horiz = TRUE, las=1)
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 5, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc2chamberAECCCA)
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 10, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 15, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc2chamberAECCCA)
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 5))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 30))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 30))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 3))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 3))$assign.per.pop*100
temp<-summary(dapc(x, n.da = 1, n.pca = 3))$assign.per.pop*100
temp
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 3))$assign.per.pop*100
temp
temporiginal_1 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 15, n.da = 1))$assign.per.pop*100
temporiginal_2 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 10, n.da = 1))$assign.per.pop*100
barplot(temporiginal_1, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temporiginal_2, xlab = "% of reassigment", horiz = TRUE, las=1)
x <- vcf_chambers
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 15))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 10))$assign.per.pop*100
temp
x <- vcf_chambers
pop(x)<- sample(pop(x))
temp<-summary(dapc(x, n.da = 1, n.pca = 3))$assign.per.pop*100
temp
microbov
library(vcfR)
library(adegenet)
data(microbov)
choco<- dapc(microbov, n.da=100, n.pca=3)
choco
choco$posterior
choco
choco$gpr
choco$gpr
choco
choco$posterior
choco
choco$assign
# cargamos los datos de las categorias de daño
meta <- read.table("../outputs/pop_Fenotype_AECCCA_DAPC.txt", header=TRUE, sep="\t")  # Si está separado por tabulaciones
pop(vcf_chambers) <- meta$suv_damozo
# corremos dapc con los grupos de asintomatico y sintomatico
dapc_AECCCA <- dapc(vcf_chambers, var.contrib = TRUE, n.pca = 25, n.da = 4)
assignplot(dapc_AECCCA)
dapc_AECCCA
summary(dapc_AECCCA)
assignplot(dapc_AECCCA)
dapc_AECCCA
dapc_AECCCA$grp
vcf_chambers@pop
vcf_chambers@pop
vcf_chambers@pop
dapc_AECCCA$grp
choco$gpr
choco$gpr
choco<- dapc(microbov, n.da=100, n.pca=3)
choco$gpr
dapc(microbov, n.da=100, n.pca=3)
choco<- dapc(microbov, n.da=100, n.pca=3)
choco$gpr
choco
choco$assign
dapc_AECCCA$assign
sumary(dapcfindcluster)
summary(dapcfindcluster)
#Crear objeto genlight con datos camaras
vcfR_chambers <- read.vcfR("../../../../VCF/GBSM_Fenotype_AECCCA.recode.vcf")
vcf_chambers<-vcfR2genlight(vcfR_chambers)
# corremos find.cluster, se escoje un numero maximo de clusters
grp <- find.clusters(vcf_chambers, max.n.clust = 20, n.pca = 50, choose = FALSE, stat = "BIC", method = "kmeans")
table(grp$grp)
grp$grp
##
plot(grp$Kstat, type = "o", xlab = "numero de grupos (K)",
ylab = "BIC",
main = "find.clusters")
# corremos dapc con los grupos formados
dapc1 <- dapc(vcf_chambers, grp$grp, n.pca = 50, n.da = 3)
dapc1
myCol <- c("purple","green","orange","red","blue")
scatter(dapc1, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:5))
assignplot(dapc1)
#Crear objeto genlight con datos camaras
vcfR_chambers <- read.vcfR("../../../../VCF/GBSM_Fenotype_AECCCA.recode.vcf")
vcf_chambers<-vcfR2genlight(vcfR_chambers)
# corremos find.cluster, se escoje un numero maximo de clusters
grp <- find.clusters(vcf_chambers, max.n.clust = 20, n.pca = 50, choose = FALSE, stat = "BIC", method = "kmeans")
table(grp$grp)
grp$grp
##
plot(grp$Kstat, type = "o", xlab = "numero de grupos (K)",
ylab = "BIC",
main = "find.clusters")
# corremos dapc con los grupos formados
dapc1 <- dapc(vcf_chambers, grp$grp, n.pca = 50, n.da = 3)
dapc1
myCol <- c("purple","green","orange","red","blue")
scatter(dapc1, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:5))
assignplot(dapc1)
meta <- read.table("../outputs/pop_Fenotype_AECCCA_DAPC.txt", header=TRUE, sep="\t")  # Si está separado por tabulaciones
pop(vcf_chambers) <- meta$suv_damozo
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 1)
# cargamos los datos de las categorias de daño
vcf_chambers@pop
dapc1chamberAECCCA
summary(dapc1chamberAECCCA)
plot(grp$Kstat, type = "o", xlab = "numero de grupos (K)",
ylab = "BIC",
main = "find.clusters")
dapc1
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 3)
vcf_chambers@pop
dapc1chamberAECCCA
pop(vcf_chambers) <- meta$suv_damozo
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 3)
vcf_chambers@pop
dapc1chamberAECCCA
meta <- read.table("../outputs/pop_Fenotype_AECCCA_DAPC.txt", header=TRUE, sep="\t")  # Si está separado por tabulaciones
pop(vcf_chambers) <- meta$suv_damozo
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 3)
# cargamos los datos de las categorias de daño
vcf_chambers@pop
dapc1chamberAECCCA
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 3)
vcf_chambers@pop
dapc1chamberAECCCA
summary(dapc1chamberAECCCA)
scatter(dapc1chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc1chamberAECCCA)
temp <- summary(dapc1chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc1chamberAECCCA)
temp
#Hay sobreajuste
temp <- optim.a.score(dapc1chamberAECCCA)
#Hay sobreajuste
temp <- optim.a.score(dapc1chamberAECCCA)
temp
# xvalDAPC r
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
# xvalDAPC r
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 10, n.da = 1)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc2chamberAECCCA)
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste
temp <- optim.a.score(dapc2chamberAECCCA)
temp
choco
dapc(microbov, n.da=100, n.pca=3)
library(vcfR)
library(adegenet)
data(microbov)
dapc(microbov, n.da=100, n.pca=3)
choco<- dapc(microbov, n.da=100, n.pca=3)
choco
choco$assign
choco$assign
choco
microbov
#Crear objeto genlight
vcfR_chambers <- read.vcfR("../../../../VCF/GBSM_Fenotype_APAECCCA.recode.vcf")
vcf_chambers<-vcfR2genlight(vcfR_chambers)
vcf_chambers
# cargamos los datos de las categorias de daño
meta <- read.table("../outputs/pop_Fenotype_APAECCCA_DAPC.txt", header=TRUE, sep="\t")  # Si está separado por tabulaciones
pop(vcf_chambers) <- meta$suv_damozo
# corremos dapc con los grupos formados
dapc(vcf_chambers, n.pca = 25, n.da = 3)
x <- vcf_chambers
pop(x) <- sample(pop(x))
pop(x)
summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 25, n.da = 3))$assign.per.pop*100
temporiginal <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 25, n.da = 3))$assign.per.pop*100
temp <- summary(dapc(vcf_chambers, n.pca = 25, n.da = 3))$assign.per.pop*100
barplot(temporiginal, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temp, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temporiginal, xlab = "% of reassigment", horiz = TRUE, las=1)
barplot(temp, xlab = "% of reassigment", horiz = TRUE, las=1)
#Crear objeto genlight con datos camaras
vcfR_chambers <- read.vcfR("../../../../VCF/GBSM_Fenotype_AECCCA.recode.vcf")
vcf_chambers<-vcfR2genlight(vcfR_chambers)
# corremos find.cluster, se escoje un numero maximo de clusters
grp <- find.clusters(vcf_chambers, max.n.clust = 20, n.pca = 50, choose = FALSE, stat = "BIC", method = "kmeans")
table(grp$grp)
grp$grp
plot(grp$Kstat, type = "o", xlab = "numero de grupos (K)",
ylab = "BIC",
main = "find.clusters")
# corremos dapc con los grupos formados
dapc1 <- dapc(vcf_chambers, grp$grp, n.pca = 50, n.da = 3)
dapc1
myCol <- c("purple","green","orange","red","blue")
scatter(dapc1, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:5))
assignplot(dapc1)
meta <- read.table("../outputs/pop_Fenotype_AECCCA_DAPC.txt", header=TRUE, sep="\t")  # Si está separado por tabulaciones
pop(vcf_chambers) <- meta$suv_damozo
dapc1chamberAECCCA <- dapc(vcf_chambers, n.pca = 50, n.da = 3)
vcf_chambers@pop
dapc1chamberAECCCA
summary(dapc1chamberAECCCA)
scatter(dapc1chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc1chamberAECCCA)
temp <- summary(dapc1chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc1chamberAECCCA)
temp
#Hay sobreajuste
temp <- optim.a.score(dapc1chamberAECCCA)
temp
temp <- a.score(dapc1chamberAECCCA)
temp
#Hay sobreajuste
temp <- optim.a.score(dapc1chamberAECCCA)
temp
# xvalDAPC r
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
# xvalDAPC r
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 100, xval.plot = TRUE)
xval[2:6]
dapc2chamberAECCCA <- dapc(vcf_chambers, n.pca = 13, n.da = 3)
dapc2chamberAECCCA
scatter(dapc2chamberAECCCA, scree.da=T, bg="white",scree.pca=TRUE, pch=20, cell=0, cstar=0, col=myCol, solid=.4,
cex=3,clab=0, leg=TRUE, txt.leg=paste("Cluster",1:2))
assignplot(dapc2chamberAECCCA)
temp <- summary(dapc2chamberAECCCA)$assign.per.pop*100
temp
temp <- a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste, porque el valor no salio negativo
temp <- optim.a.score(dapc2chamberAECCCA)
temp
# No Hay sobreajuste, porque el valor no salio negativo
temp <- optim.a.score(dapc2chamberAECCCA)
x <- vcf_chambers
mat <- tab(vcf_chambers, NA.method="mean")
grp <- pop(x)
xval <- xvalDapc(mat, grp, n.pca.max = 300, training.set = 0.9,
result = "groupMean", center = TRUE, scale = FALSE,
n.pca = NULL, n.rep = 30, xval.plot = TRUE)
xval[2:6]
temporiginal_1 <- summary(dapc(vcf_chambers,pop(vcf_chambers), n.pca = 13, n.da = 1))$assign.per.pop*100
barplot(temporiginal_1, xlab = "% of reassigment", horiz = TRUE, las=1)
dapc2chamberAECCCA$posterior
dapc2chamberAECCCA$tab
dapc2chamberAECCCA$grp
dapc2chamberAECCCA$var
dapc2chamberAECCCA$prior
dapc2chamberAECCCA$assign
dapc2chamberAECCCA$posterior
