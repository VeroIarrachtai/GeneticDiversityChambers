# Get path
directorio <- "../data/ALL_fasta_Epi-GBS"
# List all files in the directory
archivos <- list.files(directorio, full.names = TRUE)
# Get size
info_archivos <- file.info(archivos)
# Display name and size
tamaños <- data.frame(
Archivo = basename(archivos),
Tamaño_Bytes = info_archivos$size
)
print(tamaños)
# Function to convert bytes into readable units
convertir_tamaño <- function(tamaño_bytes) {
if (tamaño_bytes < 1024) {
return(paste(tamaño_bytes, "B"))
} else if (tamaño_bytes < 1024^2) {
return(paste(round(tamaño_bytes / 1024, 2), "KB"))
} else if (tamaño_bytes < 1024^3) {
return(paste(round(tamaño_bytes / 1024^2, 2), "MB"))
} else {
return(paste(round(tamaño_bytes / 1024^3, 2), "GB"))
}
}
# Apply the conversion
tamaños$Tamaño_abreviado <- sapply(info_archivos$size, convertir_tamaño)
print(tamaños)
# Write in csv file
write.csv(tamaños, "../outputs/size_fasta_Epi-GBS.csv", row.names = FALSE)
# Path
directorio <- "../data/ALL_fasta_GBS/"
# List files in the directory
archivos <- list.files(directorio, full.names = TRUE)
# Check if there are files in the directory
if (length(archivos) == 0) {
stop("No files were found in the specified directory.")
}
GBS <- read.xlsx("../metadata/GBS.xlsx")
Epi_GBS <- read.xlsx("../metadata/Epi_GBS.xlsx")
setwd("C:/Users/vre10kg/OneDrive - The Royal Botanic Gardens, Kew/Desktop/Forest-Chambers-Ozone/GeneticDiversityChambers/SecuencingData/bin")
GBS <- read.xlsx("../metadata/GBS.xlsx")
#Load libraries
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
library(car)
library(MASS)
# Cargar datos de secuenciacion y datos del monitoreo participativo
GBS <- read.xlsx("../metadata/GBS.xlsx")
Epi_GBS <- read.xlsx("../metadata/Epi_GBS.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
View(GBS)
View(forest_monitoring)
View(forest_monitoring)
colnames(forest_monitoring)
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40", "other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud" , "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id", "tree_id","tree_health_simplified","reforestation_year")]
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40", "other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud" , "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud" , "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
# Cargar datos de secuenciacion y datos del monitoreo participativo
GBS <- read.xlsx("../metadata/GBS.xlsx")
Epi_GBS <- read.xlsx("../metadata/Epi_GBS.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud" , "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
colnames(forest_monitoring)
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40", "other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud" , "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id", "tree_id","tree_health_simplified","reforestation_year")]
forest_selected <- forest_monitoring[, c("locality_key", "plot"," life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
forest_selected <- forest_monitoring[, c("locality_key", "plot", "life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_GBS <- merge(GBS, forest_selected, by = "tree_id",all.x = TRUE)
View(df_combined_GBS)
View(forest_monitoring)
# Detectar duplicados en la columna tree_number
duplicados = df_combined_GBS['tree_number'].duplicated(keep=False)
# Detectar nombres duplicados
duplicados <- duplicated(df_combined_GBS$tree_number) | duplicated(df_combined_GBS$tree_number, fromLast = TRUE)
duplicados
# Cargar datos de secuenciacion y datos del monitoreo participativo
GBS <- read.xlsx("../metadata/GBS.xlsx")
Epi_GBS <- read.xlsx("../metadata/Epi_GBS.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Detectar nombres duplicados
duplicados <- duplicated(forest_monitoring$tree_number) | duplicated(forest_monitoring$tree_number, fromLast = TRUE)
duplicados
# Reemplazar "G110" por "G63" cuando nodos == 7
forest_monitoring$tree_number[forest_monitoring$tree_number == "G110" & forest_monitoring$tree_nodes == 10] <- "G67"
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
View(forest_monitoring)
# Reemplazar "G110" por "G63" cuando nodos == 7
forest_monitoring$tree_id[forest_monitoring$id == "G63" & forest_monitoring$tree_nodes == 10] <- "G67"
# Reemplazar "G110" por "G63" cuando nodos == 7
forest_monitoring$tree_id[forest_monitoring$tre_id == "G63" & forest_monitoring$tree_nodes == 10] <- "G67"
# Reemplazar "G110" por "G63" cuando nodos == 7
forest_monitoring$tree_id[forest_monitoring$tre_id == "G63" & forest_monitoring$tree_nodes == 10] <- "G67"
# Reemplazar "G110" por "G63" cuando nodos == 7
forest_monitoring$tree_id[forest_monitoring$tre_id == "G63" & forest_monitoring$tree_nodes == 10] <- "G67"
#
forest_monitoring <- forest_monitoring %>%
mutate(tre_id = ifelse(tre_id == "G63" & tree_nodes == 10, "G67", Muestra))
#
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", Muestra))
#
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Reemplazar
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_number == "63" & tree_id == "G67", "67", tree_number))
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Reemplazar
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_number == 63 & tree_id == "G67", 67, tree_number))
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar ID cuando Muestra == "G67"
forest_monitoring <- forest_monitoring %>%
mutate(tree_nodes = ifelse(tree_id == "G67", 67, tree_nodes))
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar ID cuando Muestra == "G67"
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G110" & tree_nodes == 6, "G113", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G113", 113, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "B121", 121, tree_number))
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
#Ahora se repiten 2 veces la B121 y los datos son diferentes, por lo cual se descarta la B121
# Filtrar eliminando las filas con ID específicos
#df_combined_GBS <- df_combined_GBS %>%
#  filter(!tree_id %in% c("B112", "G110", "G63"))
# Filtrar las filas donde ID no es "B121"
forest_monitoring <- forest_monitoring %>%
filter(tree_id != "B121")
# Cargar datos de secuenciacion y datos del monitoreo participativo
GBS <- read.xlsx("../metadata/GBS.xlsx")
Epi_GBS <- read.xlsx("../metadata/Epi_GBS.xlsx")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G110" & tree_nodes == 6, "G113", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G113", 113, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "B121", 121, tree_number))
# Filtrar las filas donde ID no es "B121"
forest_monitoring <- forest_monitoring %>%
filter(tree_id != "B121")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G110" & tree_nodes == 6, "G113", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G113", 113, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "B121", 121, tree_number))
# Filtrar las filas donde ID no es "B121"
forest_monitoring <- forest_monitoring %>%
filter(tree_id != "B121")
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G110" & tree_nodes == 6, "G113", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G113", 113, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Eliminar filas donde ID es "B121" y Tipo es "B"
forest_monitoring <- forest_monitoring [!(forest_monitoring$tree_id == "B121" & forest_monitoring$person_key == "B"), ]
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
# Filtrar las filas donde ID no es "B121"
forest_monitoring <- forest_monitoring %>%
filter(tree_id != "B121")
# Eliminar filas donde ID es "B121" y Tipo es "B"
forest_monitoring <- forest_monitoring [!(forest_monitoring$tree_id == "B121" & forest_monitoring$person_key == "B"), ]
forest_monitoring <- read.xlsx("../metadata/muestreo_dic2020_tidy.xlsx")
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G110" & tree_nodes == 6, "G113", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G113", 113, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "G63" & tree_nodes == 10, "G67", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "G67", 67, tree_number))
# Reemplazar tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_id = ifelse(tree_id == "B122" & tree_nodes == 12, "B121", tree_id))
# Modificar tree_number porque tenia el mismo de tree_ID
forest_monitoring <- forest_monitoring %>%
mutate(tree_number = ifelse(tree_id == "B121", 121, tree_number))
# Eliminar filas donde ID es "B121" y Tipo es "B"
forest_monitoring <- forest_monitoring [!(forest_monitoring$tree_id == "B121" & forest_monitoring$person_key == "B"), ]
forest_selected <- forest_monitoring[, c("locality_key", "plot", "life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_GBS <- merge(GBS, forest_selected, by = "tree_id",all.x = TRUE)
# Crear un vector con las coordenadas faltantes de las muestras de datos transcriptomicos
latitudes_faltantes <- c(
"VD01" = "19.285",
"VD02" = "19.285",
"VD03" = "19.285",
"VD04" = "19.285",
"VD05" = "19.285",
"VS01" = "19.285",
"VS02" = "19.285",
"VS03" = "19.285",
"VS04" = "19.285",
"VS05" = "19.285",
"VS03" = "19.285",
"VD02r" = "19.285",
"VD03r" = "19.285",
"VD04r" = "19.285",
"VS04r" = "19.285"
)
longitudes_faltantes <- c(
"VD01" = "-99.301",
"VD02" = "-99.301",
"VD03" = "-99.301",
"VD04" = "-99.301",
"VD05" = "-99.301",
"VS01" = "-99.301",
"VS02" = "-99.301",
"VS03" = "-99.301",
"VS04" = "-99.301",
"VS05" = "-99.301",
"VS03" = "-99.301",
"VD02r" = "-99.301",
"VD03r" = "-99.301",
"VD04r" = "-99.301",
"VS04r" = "-99.301"
)
df_combined_GBS <- df_combined_GBS %>%
mutate(X_coordinates_latitude = ifelse(
is.na(X_coordinates_latitude),                # Si el valor de Coordenadas es NA
latitudes_faltantes[tree_id],         # Asignar el valor correspondiente del vector
X_coordinates_latitude                        # Mantener el valor original si no es NA
))
df_combined_GBS <- df_combined_GBS %>%
mutate(X_coordinates_longitude = ifelse(
is.na(X_coordinates_longitude),                # Si el valor de Coordenadas es NA
longitudes_faltantes[tree_id],         # Asignar el valor correspondiente del vector
X_coordinates_longitude                        # Mantener el valor original si no es NA
))
#Export data
write.csv(df_combined_GBS, "../outputs/df_GBS_metadata.csv", row.names = FALSE)
l
forest_selected <- forest_monitoring[, c("locality_key", "plot", "life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_Epi_GBS <- merge(Epi_GBS, forest_selected, by = "tree_id",all.x = TRUE)
# Filtrar eliminando las filas con ID específicos
df_combined_Epi_GBS <- df_combined_Epi_GBS %>%
filter(!tree_id %in% c("B112", "G110", "G63"))
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_Epi_GBS <- merge(Epi_GBS, forest_selected, by = "tree_id",all.x = TRUE)
View(df_combined_Epi_GBS)
forest_selected <- forest_monitoring[, c("locality_key", "plot", "life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_Epi_GBS <- merge(Epi_GBS, forest_selected, by = "tree_id",all.x = TRUE)
View(df_combined_Epi_GBS)
forest_selected <- forest_monitoring[, c("locality_key", "plot", "life_condition", "X_coordinates_latitude","X_coordinates_longitude", "X_coordinates_altitude","person_key", "tree_number", "photo_tree", "tree_diameter_category", "tree_heigth", "tree_nodes", "tree_health" , "ozone_damage_percentage", "other_damages_percentage", "other_damages_percentage.less_10", "other_damages_percentage.10.40","other_damages_percentage.50","other_damages_percentage.50.70","other_damages_percentage.70.100", "photo_health", "bud", "photo_bud", "branch_nodes", "nodes_with_leaves", "photo_branch", "cones", "cone_sex",  "photo_cones" , "tree_exposition", "surronding_vegetation.fir","surronding_vegetation.pine", "surronding_vegetation.oak", "surronding_vegetation.bush", "surronding_vegetation.grass", "surronding_vegetation.other", "reforested", "reforestation_code", "tree_id","tree_health_simplified","reforestation_year")]
View(Epi_GBS)
# Une datos de la data frame GBS y datos seleccionados de la data frame del monitoreo participativo forest_monitoring
df_combined_Epi_GBS <- merge(Epi_GBS, forest_selected, by = "tree_id",all.x = TRUE)
df_combined_Epi_GBS <- df_combined_Epi_GBS %>%
mutate(X_coordinates_latitude = ifelse(
is.na(X_coordinates_latitude),                # Si el valor de Coordenadas es NA
latitudes_faltantes[tree_id],         # Asignar el valor correspondiente del vector
X_coordinates_latitude                        # Mantener el valor original si no es NA
))
df_combined_Epi_GBS <- df_combined_Epi_GBS %>%
mutate(X_coordinates_longitude = ifelse(
is.na(X_coordinates_longitude),                # Si el valor de Coordenadas es NA
longitudes_faltantes[tree_id],         # Asignar el valor correspondiente del vector
X_coordinates_longitude                        # Mantener el valor original si no es NA
))
View(df_combined_Epi_GBS)
#Export data
write.csv(df_combined_Epi_GBS, "../outputs/df_Epi_GBS_metadata.csv", row.names = FALSE)
